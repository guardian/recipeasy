// `animation` prefixer
@mixin animation($args) {
    -webkit-animation: $args;
    -moz-animation: $args;
    animation: $args;
}

// `animation-delay` prefixer
@mixin animation-delay($args) {
    -webkit-animation-delay: $args;
    -moz-animation-delay: $args;
    animation-delay: $args;
}

// `animation-duration` prefixer
@mixin animation-duration($args) {
    -webkit-animation-duration: $args;
    -moz-animation-duration: $args;
    animation-duration: $args;
}

// `animation-direction` prefixer {
@mixin animation-direction($args) {
    -webkit-animation-direction: $args;
    -moz-animation-direction: $args;
    animation-direction: $args;
}

@mixin animation-fill-mode($args) {
    -webkit-animation-fill-mode: $args;
    -moz-animation-fill-mode: $args;
    animation-fill-mode: $args;
}

// `background-size` prefixer
@mixin background-size($args...) {
    -webkit-background-size: $args;
    -moz-background-size: $args;
    background-size: $args;
}

// `border-radius` prefixer
@mixin border-radius($radius: 5px) {
    // If we want to draw a circle, output a pixel value instead,
    // as older versions of WebKit do not support % in border-radius
    @if $radius == 50% {
        $radius: 1000px;
    }

    @if function-exists(rem) {
        -webkit-border-radius: rem($radius);
        border-radius: rem($radius);
    } @else {
        -webkit-border-radius: $radius;
        border-radius: $radius;
    }
}

// `box-shadow` prefixer.
@mixin box-shadow($args...) {
    -webkit-box-shadow: $args;
    -moz-box-shadow: $args;
    box-shadow: $args;
}

// `box-sizing` prefixer
@mixin box-sizing($box) {
    -webkit-box-sizing: $box;
    -moz-box-sizing: $box;
    box-sizing: $box;
}

// `column-width` prefixer. Uses `rem` if defined
@mixin column-width($value: auto) {
    @if function-exists(rem) {
        -webkit-column-width: rem($value);
        -moz-column-width: rem($value);
        column-width: rem($value);
    } @else {
        -webkit-column-width: $value;
        -moz-column-width: $value;
        column-width: $value;
    }
}

// `flex` prefixer
@mixin flex($flex-grow: 0, $flex-shrink: 1, $flex-basis: auto) {
    -webkit-box-flex: $flex-grow;
    -moz-box-flex: $flex-grow;
    -webkit-flex: $flex-grow $flex-shrink $flex-basis;
    -ms-flex: $flex-grow $flex-shrink $flex-basis;
    flex: $flex-grow $flex-shrink $flex-basis;
}

// `flex-direction` prefixer
@mixin flex-direction($direction) {
    -webkit-flex-direction: $direction;
    -ms-flex-direction: $direction;
    flex-direction: $direction;
}

// `flex-basis` prefixer
@mixin flex-basis($value: auto) {
    -webkit-flex-basis: $value;
    -moz-flex-basis: $value;
    -ms-flex-preferred-size: $value;
    flex-basis: $value;
}

// `display: flex` prefixer
@mixin flex-display {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}

// `flex-grow` prefixer
@mixin flex-grow($value: 0) {
    -webkit-box-flex: $value;
    -webkit-flex-grow: $value;
    -moz-flex-grow: $value;
    -ms-flex-positive: $value;
    flex-grow: $value;
}

// `@keyframes` prefixer
@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content; 
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  } 
}

// `transform: rotate()` prefixer
@mixin rotate($angle) {
    @include transform(rotate($angle));
}

// `position: sticky` prefixer
@mixin sticky {
    position: -webkit-sticky; // iOS 6+
    position: -moz-sticky;
    position: -ms-sticky;
    position: sticky;
}

// `transform` prefixer.
@mixin transform($args) {
    -webkit-transform: $args;
    -moz-transform: $args;
    -ms-transform: $args;
    -o-transform: $args;
    transform: $args;
}

// `transform-origin` prefixer.
@mixin transform-origin($args) {
    -webkit-transform-origin: $args;
    -moz-transform-origin: $args;
    -ms-transform-origin: $args;
    -o-transform-origin: $args;
    transform-origin: $args;
}

// `transition` prefixer.
@mixin transition($args...) {
    -webkit-transition: $args;
    -moz-transition: $args;
    transition: $args;
}