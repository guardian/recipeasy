{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "CloudFormation for recipeasy RDS",
  "Parameters": {
    "VpcId": {
      "Description": "Virtual Private Cloud to run EC2 instances within",
      "Type": "AWS::EC2::VPC::Id"
    },
    "Subnets": {
      "Description": "Subnets to run load balancer within",
      "Type": "List<AWS::EC2::Subnet::Id>"
    },
    "Stage": {
      "Description": "Environment name",
      "Type": "String",
      "Default": "CODE"
    },
    "MasterUsername": {
      "Description": "Username for the primary RDS login",
      "Type": "String"
    },
    "MasterPassword": {
      "Description": "Password for the primary RDS login",
      "Type": "String",
      "NoEcho": true,
      "MinLength": 10
    }
  },

  "Conditions": {
    "IsProd": { "Fn::Equals": [ { "Ref": "Stage" }, "PROD" ] }
  },

  "Resources": {
    "m3mediumParameterGroup": {
      "Type": "AWS::RDS::DBParameterGroup",
      "Properties" : {
        "Description" : "Postgres settings for RDS Primary",
        "Family" : "postgres9.5",
        "Parameters" : {
          "max_connections": "100",
          "maintenance_work_mem": "245760",
          "work_mem": "38912",
          "checkpoint_completion_target": "0.9",
          "shared_buffers": "131072",
          "effective_cache_size": "393216",
          "random_page_cost": 1.1
        }
      }
    },

    "RecipeasySecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security group for instances and clients of RDS",
        "VpcId": { "Ref": "VpcId" }
      }
    },

    "RDSSecurityGroup": {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "RDS security group rules",
        "SecurityGroupIngress" : [
          {
            "IpProtocol": "tcp",
            "FromPort": 5432,
            "ToPort": 5432,
            "SourceSecurityGroupId": { "Ref": "RecipeasySecurityGroup" }
          }
        ],
        "Tags" :  [
          {
            "Key": "Stack",
            "Value": "content-api-recipeasy"
          },
          {
            "Key": "Stage",
            "Value": { "Ref": "Stage" }
          },
          {
            "Key": "App",
            "Value": "postgres"
          }
        ],
        "VpcId" : { "Ref": "VpcId" }
      }
    },

    "RDSSubnetGroup": {
      "Type" : "AWS::RDS::DBSubnetGroup",
      "Properties" : {
        "DBSubnetGroupDescription" : "RDS subnet group - VPC private subnets",
        "SubnetIds" : { "Ref": "Subnets" },
        "Tags" : [
          {
            "Key": "Stack",
            "Value": "content-api-recipeasy"
          },
          {
            "Key": "Stage",
            "Value": { "Ref": "Stage" }
          },
          {
            "Key": "App",
            "Value": "postgres"
          }
        ]
      }
    },

    "RDSPrimary": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AllocatedStorage": "5",
        "AllowMajorVersionUpgrade": true,
        "AutoMinorVersionUpgrade": true,
        "BackupRetentionPeriod": "30",
        "DBInstanceClass": "db.t2.small",
        "DBInstanceIdentifier": { "Fn::Join": [ "-", [ "recipeasy-rds-primary", { "Ref": "Stage" } ] ] } ,
        "DBParameterGroupName": { "Ref": "m3mediumParameterGroup" },
        "DBSubnetGroupName": { "Ref": "RDSSubnetGroup" },
        "Engine": "postgres",
        "EngineVersion": "9.5.2",
        "MasterUsername": { "Ref": "MasterUsername"},
        "MasterUserPassword": { "Ref": "MasterPassword"},
        "MultiAZ": { "Fn::If": [ "IsProd", true, false ] },
        "Port": "5432",
        "PreferredBackupWindow": "02:00-02:30",
        "PreferredMaintenanceWindow": "Mon:06:30-Mon:07:00",
        "PubliclyAccessible": false,
        "StorageEncrypted": false,
        "StorageType": "standard",
        "Tags": [
          {
            "Key": "Stack",
            "Value": "content-api-recipeasy"
          },
          {
            "Key": "Stage",
            "Value": { "Ref": "Stage" }
          },
          {
            "Key": "App",
            "Value": "postgres"
          }
        ],
        "VPCSecurityGroups": [ { "Ref": "RecipeasySecurityGroup" }, { "Ref": "RDSSecurityGroup" } ]
      },
      "DeletionPolicy" : "Snapshot"
    }
  },

  "Outputs": {
    "RecipeasySecurityGroup": {
      "Value": { "Fn::GetAtt": [ "RecipeasySecurityGroup", "GroupId" ] }
    }
  }

}
